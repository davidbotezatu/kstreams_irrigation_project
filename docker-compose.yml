version: '2.1'

services:
  zk1:
    image: confluentinc/cp-zookeeper:7.0.1
    hostname: zk1
    container_name: zk1
    ports:
      - "12181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zk1:2888:3888;zk2:2888:3888;zk3:2888:3888

  zk2:
    image: confluentinc/cp-zookeeper:7.0.1
    hostname: zk2
    container_name: zk2
    ports:
      - "22181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_SERVERS: zk1:2888:3888;zk2:2888:3888;zk3:2888:3888

  zk3:
    image: confluentinc/cp-zookeeper:7.0.1
    hostname: zk3
    container_name: zk3
    ports:
      - "32181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_SERVERS: zk1:2888:3888;zk2:2888:3888;zk3:2888:3888

  kafka1:
    image: confluentinc/cp-kafka:7.0.1
    hostname: kafka1
    container_name: kafka1
    ports:
      - "19092:19092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: KAFKA_INTERNAL://kafka1:9092,KAFKA_HOST://kafka1:19092
      KAFKA_ADVERTISED_LISTENERS: KAFKA_INTERNAL://kafka1:9092,KAFKA_HOST://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: KAFKA_INTERNAL:PLAINTEXT,KAFKA_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: KAFKA_INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_ZOOKEEPER_CONNECT: "zk1:2181,zk2:2181,zk3:2181"
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
    depends_on:
      - zk1
      - zk2
      - zk3

  kafka2:
    image: confluentinc/cp-kafka:7.0.1
    hostname: kafka2
    container_name: kafka2
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_LISTENERS: KAFKA_INTERNAL://kafka2:9092,KAFKA_HOST://kafka2:29092
      KAFKA_ADVERTISED_LISTENERS: KAFKA_INTERNAL://kafka2:9092,KAFKA_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: KAFKA_INTERNAL:PLAINTEXT,KAFKA_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: KAFKA_INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_ZOOKEEPER_CONNECT: "zk1:2181,zk2:2181,zk3:2181"
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
    depends_on:
      - zk1
      - zk2
      - zk3

  kafka3:
    image: confluentinc/cp-kafka:7.0.1
    hostname: kafka3
    container_name: kafka3
    ports:
      - "39092:39092"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_LISTENERS: KAFKA_INTERNAL://kafka3:9092,KAFKA_HOST://kafka3:39092
      KAFKA_ADVERTISED_LISTENERS: KAFKA_INTERNAL://kafka3:9092,KAFKA_HOST://localhost:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: KAFKA_INTERNAL:PLAINTEXT,KAFKA_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: KAFKA_INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_ZOOKEEPER_CONNECT: "zk1:2181,zk2:2181,zk3:2181"
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
    depends_on:
      - zk1
      - zk2
      - zk3

  schema-registry:
    image: confluentinc/cp-schema-registry:7.0.1
    hostname: schema-registry
    container_name: schema-registry
    ports:
      - "8082:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_LOG_LEVEL: info
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "kafka1:9092,kafka2:9092,kafka3:9092"
    depends_on:
      - zk1
      - zk2
      - zk3

  akhq:
    image: tchiotludo/akhq:0.24.0
    container_name: akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            irrigation_cluster:
              properties:
                bootstrap.servers: "kafka1:9092,kafka2:9092,kafka3:9092"
              schema-registry:
                url: "http://schema-registry:8081"
    ports:
      - "8180:8080"
    links:
      - kafka1
      - kafka2
      - kafka3
      - schema-registry

  init-kafka:
    image: confluentinc/cp-kafka:7.0.1
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka1:9092 --list
      
      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka1:9092 --create --if-not-exists --topic water-levels --replication-factor 3 --partitions 3
      kafka-topics --bootstrap-server kafka1:9092 --create --if-not-exists --topic parcel-data --replication-factor 3 --partitions 2
      kafka-topics --bootstrap-server kafka1:9092 --create --if-not-exists --topic controller --replication-factor 3 --partitions 2
      
      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka1:9092 --list
      "